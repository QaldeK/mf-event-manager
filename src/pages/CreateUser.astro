---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Enregistrer un nouvel utilisateur•ice">
  <div class="p-4 max-w-md mx-auto space-y-8">
    <h1 class="text-xl font-bold text-center mb-8">Enregistrer un nouvel utilisateur•ice</h1>
    <div x-data="formData()">
      <form
        action="/api/CreateUser"
        method="post"
        class="space-y-8 rounded-lg border border-gray-300 p-8 shadow-md"
        @submit.prevent="submitForm"
      >
        <label class="block">
          <span class="block text-gray-700 font-semibold mb-0">Nom</span>
          <input
            type="text"
            name="name"
            id="name"
            required
            class="w-full rounded-md border-gray-300 shadow-sm focus:ring focus:ring-blue-500 focus:ring-1 p-2"
          />
        </label>
        <div x-show="formErrorName" x-text="formErrorName" class="mt-0 bg-red-100 text-red-700 px-4 py-1 relative" role="alert">

        </div>
        <label class="block">
          <span class="block text-gray-700 font-semibold mb-1">Email</span>
          <input
            type="email"
            name="email"
            id="email"
            required
            class="w-full rounded-md border-gray-300 shadow-sm focus:ring focus:ring-blue-500 focus:ring-1 p-2"
          />
        </label>

        <div x-show="formErrorEmail" x-text="formErrorEmail" class="mt-1 bg-red-100 text-red-700 px-4 py-3 relative" role="alert"></div>
        <button
          type="submit"
          class="bg-blue-500 hover:bg-blue-600 text-white font-medium py-3 px-6 rounded-lg"
          >Enregistrer</button
        >
      </form>
      <div x-show="formError" x-text="formError" class="mt-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert"></div>

      <div x-show="formSuccess" x-text="formSuccess" class="mt-4 bg-green-100 border border-green-400 text-green-700 px-4 py-1 rounded relative" role="alert"></div>
    </div>
  </div>
</Layout>

<script>
import Alpine from "alpinejs";

  Alpine.data("formData", () => ({
 
      formError: '',
      formErrorName: '',
      formErrorEmail: '',
      formSuccess: '',
      
      submitForm(event) {
        const formData = new FormData(event.target);

        fetch("/api/CreateUser", {
          method: "POST",
          body: formData,
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.error === `duplicate key value violates unique constraint "users_name_key"`) {
              this.formErrorName = "Ce nom est déjà enregistré";
              this.formError = data.error;
            } else {
              this.formErrorName = "";
            }
        
            if (data.error === `duplicate key value violates unique constraint "users_email_key"`) {
              this.formErrorEmail = "Cet email est déjà enregistré";
              this.formError = data.error;
            } else {
              this.formErrorEmail = "";
            }
            
            if (data.success) {
              // Handle success
              this.formError = "";
              this.formErrorName = "";
              this.formErrorEmail = "";
              this.formSuccess = "Nouvel·le utilisateur•ice enregistré·e";
            }
          })
          .catch((error) => {
            console.error("Error:", error);
          });
      }
    })
  );
</script>